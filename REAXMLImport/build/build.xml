<?xml version="1.0" encoding="UTF-8" ?>
<project default="create_install" basedir="..">

	<!-- Task definition -->
	<!-- Define classpath for ant-contrib tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" />

	<property name="db.username" value="root" />
	<property name="db.password" value="root" />
	<property name="db.name" value="joomla-reaxml" />
	<property name="db.table-prefix" value="jos_" />
	<property name="builddir" location="./build" />
	<property name="parentdir" location="." />
	<property name="composer" location="./composer.phar" />

	<property name="manifestfile" value="com_reaxmlimport.xml" />
	<property name="installfile" value="../REAXMLPackage/packages/com_reaxmlimport.zip" />
	<property name="htdocs.dir" value="./tests/htdocs"/>
	<property name="db.password" value="root"/>
    <property name="unite.xml" value="./tests/unite/inbox/site-reaxml.dev.xml"/>
	<property name="unite.log.dir" value="./tests/unite/log" />
    <mkdir dir="${unite.log.dir}"/>
	<property name="php.ini" value="/Applications/MAMP/bin/php/php5.5.26/conf/php.ini"/>
    <property name="php.ini.loc" location="${php.ini}"/>
    <property name="httpd.conf" value="/Applications/MAMP/conf/apache/httpd.conf"/>
    <property name="httpd-vhosts.conf" value="/Applications/MAMP/conf/apache/extra/httpd-vhosts.conf"/>
    <property name="test.httpd.conf.dir" value="./tests/httpd"/>
    <mkdir dir="${test.httpd.conf.dir}"/>
    <property name="test.httpd.conf.dir.loc" location="${test.httpd.conf.dir}"/>
    <property name="test.httpd.conf" value="${test.httpd.conf.dir.loc}/httpd.conf"/>
    <property name="test.httpd-vhosts.conf" value="${test.httpd.conf.dir.loc}/httpd-vhosts.conf"/>
    <property name="servername" value="reaxml.dev"/>
    <property name="test-results.dir" value="./tests/test-results" />
    <mkdir dir="${test-results.dir}"/>
    <property name="firefox.app" value="/Applications/Firefox.app"/>
    <property name="selenium-server.jar" value="/usr/local/bin/selenium-server-standalone-2.46.0-4.jar" />
    <property name="selenium-server.jar.location" location="${selenium-server.jar}" />
    <property name="phpunit.xml" value="./tests/phpunit.xml" />
    <property name="phpunit.xml.loc" location="${phpunit.xml}" />


    <scriptdef name="increment_version" language="javascript">
		<attribute name="current" />
		<attribute name="property" />
		<![CDATA[
		var current = attributes.get("current");
		var dotidx = current.lastIndexOf(".");
		var buildnum = parseInt(current.slice(dotidx+1));
		project.setProperty(attributes.get("property"),current.substring(0,dotidx+1) + (++buildnum) ) ;
		]]>
	</scriptdef>

	<tstamp>
		<format property="datetime" pattern="yyyy-MM-dd'T'HH:mm:ss.SSS" />
	</tstamp>

	<target name="create_install" depends="update_headers">
		<zip destfile="${installfile}" >
			<fileset dir="." excludes=".*/**, **/.DS_Store, tests/**, build/**, .settings/**, vendor/**, composer.*"/>
		</zip>
	</target>


    <target name="deploy_for_test" depends="create_install">
        <ant antfile="../REAXMLPackage/build/build.xml" target="copy_latest" inheritAll="false"/>
    </target>

	<target name="update_headers" depends="update_manifest">
		<foreach target="replace_headers" param="fullfilename" inheritall="true">
			<param name="copyright" value="${copyright.stripped}" />
			<param name="version" value="${newVersion}" />
			<path>
				<fileset dir="admin">
					<include name="**/*.php" />
					<include name="**/*.js" />
				</fileset>
				<fileset dir="site">
					<include name="**/*.php" />
					<include name="**/*.js" />
				</fileset>
			</path>
		</foreach>
	</target>

	<target name="update_manifest" depends="get_version" unless="skipIncrement">
		<echo>newversion=${newVersion}</echo>
		<xmltask    source="${manifestfile}" dest="${manifestfile}">
           <replace path="/extension/version/text()" withText="${newVersion}" />
		</xmltask>
	</target>

	<target name="get_version" depends="increment_version" if="skipIncrement" >
		<property name="newVersion" value="${version}" />
	</target>

	<target name="increment_version" depends="get_component_properties" unless="skipIncrement">
		<echo>${version}</echo>
		<increment_version current="${version}" property="newVersion" />
		<echo>${newVersion}</echo>
	</target>

	<target name="get_component_properties">
		<xmlproperty file="${manifestfile}" keepRoot="false" />
		<loadresource property="copyright.stripped">
			<string value="${copyright}" />
			<filterchain>
				<striplinebreaks />
				<replaceregex pattern="[\t]+" replace=" " flags="g" />
			</filterchain>
		</loadresource>
	</target>

	<target name="replace_headers">
		<basename file="${fullfilename}" property="filename" />
		<loadfile property="header" srcFile="build/header.txt">
			<filterchain>
				<expandproperties />
			</filterchain>
		</loadfile>
		<replaceregexp file="${fullfilename}" match="/\*\*.*\* @copyright.*\*\*/" flags="sm" replace="${header}">
		</replaceregexp>
	</target>

    <target name="composer-check">
        <available file="${composer}" property="composer.present" />
    </target>

    <target name="composer-download" depends="composer-check" unless="composer.present">
        <property name="composer.noselfupdate" value="true" />
        <get src="https://getcomposer.org/composer.phar" dest="${composer}" />
    </target>

    <target name="composer-selfupdate" depends="php-check,composer-download" unless="composer.noselfupdate">
        <exec executable="${php}" dir="${parentdir}">
            <arg value="-c"/>
            <arg value="${php.ini.loc}"/>
            <arg value="${composer}" />
            <arg value="self-update" />
            <arg value="--quiet" />
        </exec>
    </target>

    <target name="composer" depends="composer-selfupdate" unless="composer.noupdate">
        <exec executable="${php}" dir="${parentdir}">
            <arg value="-c"/>
            <arg value="${php.ini.loc}"/>
            <arg value="${composer}" />
            <arg value="update" />
        </exec>
    </target>

    <target name="build" depends="composer,joomla-build">
    </target>

    <target name="test" depends="start-servers,clear-test-results,php-check,phpunit-xml">
        <property name="phpunit.executable.loc" location="./vendor/bin/phpunit" />
        <property name="tests.dir.loc" location="./tests"/>

         <exec executable="${php}" failonerror="true" dir="${tests.dir.loc}">
             <arg value="-c"/>
             <arg value="${php.ini.loc}"/>
             <arg value="${phpunit.executable.loc}"/>
             <arg value="-c" />
             <arg value="${phpunit.xml.loc}" />
        </exec>

        <!-- Stop the Selenium RC server -->
        <antcall target="stop-selenium-server" />

    </target>

    <target name="start-servers" depends="start-webserver,start-selenium-server,start-mailcatcher">

    </target>

    <target name="phpunit-xml" >
        <property name="test-results.dir.loc" location="${test-results.dir}" />
        <property name="firefox.app.loc" location="${firefox.app}"/>
        <property name="firefox-browser-selenium" value="*firefox ${firefox.app.loc}"/>
        <property name="tests.dir.loc" location="./tests"/>
        <property name="selenium.tests.dir.loc" location="./tests/selenium"/>
        <property name="bootstrap.php.log" location="./tests/bootstrap.php"/>
        <xmltask source="${phpunit.xml.loc}" dest="${phpunit.xml.loc}">
            <replace path="/phpunit/@bootstrap" withText="${bootstrap.php.log}" />
            <replace path="/phpunit/php/var[@name='DB_DSN']/@value" withText="mysql:dbname=${db.name};host=localhost" />
            <replace path="/phpunit/php/var[@name='DB_USER']/@value" withText="${db.username}" />
            <replace path="/phpunit/php/var[@name='DB_PASSWD']/@value" withText="${db.password}" />
            <replace path="/phpunit/php/var[@name='DB_DBNAME']/@value" withText="${db.name}" />
            <replace path="/phpunit/php/var[@name='DB_TBLPREFIX']/@value" withText="${db.table-prefix}" />
            <replace path="/phpunit/testsuites/testsuite/directory[1]/text()" withText="${tests.dir.loc}" />
            <replace path="/phpunit/testsuites/testsuite/directory[2]/text()" withText="${selenium.tests.dir.loc}" />
            <replace path="/phpunit/logging/log[@type='junit']/@target" withText="${test-results.dir.loc}/logfile.xml" />
            <replace path="/phpunit/logging/log[@type='testdox-html']/@target" withText="${test-results.dir.loc}/testdox.html" />
            <replace path="/phpunit/selenium/browser[@name='firefox']/@browser" withText="${firefox-browser-selenium}" />
        </xmltask>
    </target>

    <target name="clear-test-results">
        <property name="test-results.dir.loc" location="${test-results.dir}" />
        <delete>
            <fileset dir="${test-results.dir.loc}" includes="*.*" />
        </delete>
    </target>

    <target name="start-selenium-server">
        <property name="firefox.profile.property.directive" value="-Dwebdriver.firefox.profile=test-debug"/>
        <property name="chrome.driver.property.directive" value="-Dwebdriver.chrome.driver=/usr/bin/chromedriver"/>
        <property name="test-results.dir.loc" location="${test-results.dir}" />
        <echo message="Starting Selenium RC server (runs as a separate process)" />
        <java jar="${selenium-server.jar.location}" fork="true" spawn="true">
            <arg line="-log ${test-results.dir.loc}/selenium.log ${firefox.profile.property.directive} ${chrome.driver.property.directive}" />
        </java>
        <sleep seconds="5"/>
    </target>

    <target name="stop-selenium-server">
        <echo message="Stopping Selenium RC server" />
        <get taskname="selenium-shutdown" src="http://localhost:4444/selenium-server/driver/?cmd=shutDownSeleniumServer" dest="../tests/test-results/selenium-shutdown-dest.txt" ignoreerrors="true" />
        <echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
    </target>

    <target name="mailcatcher-check">
        <condition property="mailcatcher" value="/usr/bin/mailcatcher">
            <not>
                <isset property="${mailcatcher}" />
            </not>
        </condition>
    </target>

    <target name="start-mailcatcher" depends="mailcatcher-check" >
        <exec executable="${mailcatcher}"/>
    </target>


    <target name="php-check">
        <condition property="php" value="php">
            <not>
                <isset property="${php}" />
            </not>
        </condition>
    </target>

	<target name="unite-config">
		<property name="unite.tmp.dir" value="tests/unite/tmp" />
        <mkdir dir="${unite.tmp.dir}"/>
		<property name="unite.tmp.dir.loc" location="${unite.tmp.dir}"/>
		<property name="unite.inbox.dir" value="tests/unite/inbox" />
		<property name="unite.inbox.dir.loc" location="${unite.inbox.dir}"/>
        <property name="unite.log.dir.loc" location="${unite.log.dir}"/>

		<property name="unite.config.file.loc" location="tests/unite/config.php"/>

		<replaceregexp file="${unite.config.file.loc}" match="(const tempDir = ')(.*)(';)" replace="\1${unite.tmp.dir.loc}\3"/>
		<replaceregexp file="${unite.config.file.loc}" match="(const logDir = ')(.*)(';)" replace="\1${unite.log.dir.loc}\3"/>
		<replaceregexp file="${unite.config.file.loc}" match="(const inboxDir = ')(.*)(';)" replace="\1${unite.inbox.dir.loc}\3"/>
		<replaceregexp file="${unite.config.file.loc}" match="(const keepxml = ')(.*)(';)" replace="\1false\3"/>
	</target>

    <target name="unite-xml">
        <property name="unite.xml.loc" location="${unite.xml}"/>
        <property name="htdocs.dir.loc" location="${htdocs.dir}"/>
		<xmltask source="${unite.xml.loc}" dest="${unite.xml.loc}">
			<replace path="/unite/siteInfo/absolutepath/text()" withText="${htdocs.dir.loc}" />
			<replace path="unite/databaseInfo/database/dbpass/text()" withText="${db.password}" />
		</xmltask>
    </target>

	<target name="joomla-build" depends="php-check,unite-config,unite-xml">

        <property name="unite.php" value="tests/unite/unite.php"/>
        <property name="unite.php.loc" location="${unite.php}"/>
		<mkdir dir="${htdocs.dir}"/>
        <property name="htdocs.dir.loc" location="${htdocs.dir}"/>
        <property name="php.ini.loc" location="${php.ini}"/>
		<exec executable="${php}" outputProperty="unite.log">
			<arg value="-c"/>
			<arg file="${php.ini.loc}"/>
			<arg value="-f"/>
			<arg file="${unite.php.loc}"/>
		</exec>
		<echo message="${unite.log}"/>
		<fail message="unite execution failed">
			<condition>
				<contains string="${unite.log}" substring="Total definitions executed successfuly : 0" />
			</condition>
		</fail>
		<delete file="akeeba.log"/>
		<delete file="akeeba.cli.log"/>
		<delete file="${unite.log.dir}/unite.log.php"/>
	</target>

    <target name="vhost-check" depends="copy-http-config">

        <replaceregexp file="${test.httpd.conf}" match="#*(Include\s).*(\/httpd-vhosts\.conf)" replace="\1${test.httpd.conf.dir.loc}\2"/>

        <condition property="vhost-exists" else="false">
            <resourcecontains resource="${test.httpd-vhosts.conf}" substring="ServerName ${servername}"/>
        </condition>

    </target>

    <target name="add-vhost" depends="vhost-check,copy-http-config" unless="vhost-exists">
        <echo message="adding virtual host ${servername}"/>
        <property name="htdocs.dir.loc" location="${htdocs.dir}"/>

        <echo file="${test.httpd-vhosts.conf}">
&lt;VirtualHost *:80&gt;
    DocumentRoot "${htdocs.dir.loc}"
    ServerName ${servername}
    &lt;Directory "${htdocs.dir.loc}"&gt;
        Options All
        AllowOverride All
        Order allow,deny
        Allow from all
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;
        </echo>

    </target>

    <target name="copy-http-config">

        <copy file="${httpd.conf}" todir="${test.httpd.conf.dir.loc}"/>
        <copy file="${httpd-vhosts.conf}" todir="${test.httpd.conf.dir.loc}" />

    </target>

	<target name="configure-vhost" depends="vhost-check" if="vhost-exists">
        <echo message="modifying virtual host ${servername}"/>
        <property name="htdocs.dir.loc" location="${htdocs.dir}"/>

		<replaceregexp file="${test.httpd-vhosts.conf}" flags="s"
					   match='(&lt;VirtualHost \*:80&gt;\s*DocumentRoot\s*")[^"]*("\s*ServerName\s${servername}\s*&lt;Directory\s*")[^"]*("&gt;[^&lt;]*&lt;\/Directory&gt;\s*&lt;\/VirtualHost&gt;)'
					replace="\1${htdocs.dir.loc}\2${htdocs.dir.loc}\3"/>

	</target>

	<target name="sudo-check">
		<condition property="sudo" value="sudo">
			<not>
				<isset property="${sudo}" />
			</not>
		</condition>
	</target>

	<target name="start-webserver" depends="sudo-check,configure-vhost,add-vhost">
		<property name="httpd.bin" location="/Applications/MAMP/Library/bin/httpd"/>
        <property name="test.httpd.conf.loc" location="${test.httpd.conf}"/>
		<exec executable="${sudo}">
			<arg line="${httpd.bin} -k stop"/>
		</exec>
        <sleep seconds="2"/>
        <exec executable="${sudo}">
            <arg line="${httpd.bin} -f ${test.httpd.conf.loc} -k start"/>
        </exec>
	</target>

</project>