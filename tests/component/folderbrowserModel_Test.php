<?php

/**
 *
 * @copyright Copyright (C) 2014 Clifton IT Foundries Pty Ltd All rights reserved.
 * @license GNU General Public License version 2 or later; see LICENSE.txt
 *
 */

if (! function_exists ( 'glob_recursive' )) {
    // Does not support flag GLOB_BRACE
    function glob_recursive($pattern, $flags = 0) {
        $files = glob ( $pattern, $flags );
        foreach ( glob ( dirname ( $pattern ) . '/*', GLOB_ONLYDIR | GLOB_NOSORT ) as $dir ) {
            $files = array_merge ( $files, glob_recursive ( $dir . '/' . basename ( $pattern ), $flags ) );
        }
        return $files;
    }
}

class FolderbrowserModel_Test extends PHPUnit_Framework_TestCase {
	/**
	 * @before
	 */
	public function setUp() {
	    parent::setUp();

	    if(!file_exists(JPATH_ROOT.'/ftp')){
	        mkdir(JPATH_ROOT.'/ftp');
        }
        if(!file_exists(JPATH_ROOT.'/ftp/input')){
            mkdir(JPATH_ROOT.'/ftp/input');
        }
        if(!file_exists(JPATH_ROOT.'/ftp/done')){
            mkdir(JPATH_ROOT.'/ftp/done');
        }
        if(!file_exists(JPATH_ROOT.'/ftp/work')){
            mkdir(JPATH_ROOT.'/ftp/work');
        }
        if(!file_exists(JPATH_ROOT.'/ftp/error')){
            mkdir(JPATH_ROOT.'/ftp/error');
        }
        if(!file_exists(JPATH_ROOT.'/ftp/log')){
            mkdir(JPATH_ROOT.'/ftp/log');
        }


	}
    private static function recursiveUnlink($pattern) {
        foreach ( glob_recursive ( $pattern ) as $file ) {
            if (! is_dir ( $file )) {
                unlink ( $file );
            }
        }
        foreach ( glob_recursive ( $pattern ) as $file ) {
            try {
                rmdir ( $file );
            } catch ( Exception $e ) {
            }
        }
    }
    public static function cleanDirectories() {
        self::recursiveUnlink ( __DIR__ . DIRECTORY_SEPARATOR . '/test_done/*' );
        self::recursiveUnlink ( __DIR__ . DIRECTORY_SEPARATOR . '/test_work/*' );
        self::recursiveUnlink ( __DIR__ . DIRECTORY_SEPARATOR . '/test_input/*' );
        self::recursiveUnlink ( __DIR__ . DIRECTORY_SEPARATOR . '/test_error/*' );
        self::recursiveUnlink ( __DIR__ . DIRECTORY_SEPARATOR . '/test_log/*' );

    }
    /**
     * @after
     */
    public function tearDown()
    {
        $this->cleanDirectories();

        if(file_exists(JPATH_ROOT.'/ftp/input')){
            rmdir(JPATH_ROOT.'/ftp/input');
        }
        if(file_exists(JPATH_ROOT.'/ftp/done')){
            rmdir(JPATH_ROOT.'/ftp/done');
        }
        if(file_exists(JPATH_ROOT.'/ftp/work')){
            rmdir(JPATH_ROOT.'/ftp/work');
        }
        if(file_exists(JPATH_ROOT.'/ftp/error')){
            rmdir(JPATH_ROOT.'/ftp/error');
        }
        if(file_exists(JPATH_ROOT.'/ftp/log')){
            rmdir(JPATH_ROOT.'/ftp/log');
        }

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
	 * @test
	 */
	public function suppliesCorrectUrl(){
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder(realpath(JPATH_ROOT.'/ftp'));
		$model->setInputid('jform_input_dir');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');
		
		// Act
		$url = $model->getUrl();
		
		//Assert
		$this->assertThat($url, $this->equalTo('/ftp'));
	}
	/**
	 * @test
	 */
	public function suppliesRootUrlWhenFolderNotUnderSitePath(){
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder(realpath(__DIR__.'/../'));
		$model->setInputid('jform_input_dir');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');
	
		// Act
		$url = $model->getUrl();
	
		//Assert
		$this->assertThat($url, $this->equalTo('/'));
	}
	/**
	 * @test
	 */
	public function suppliesRootUrlWhenFolderIsSitePath(){
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder(realpath(JPATH_ROOT));
		$model->setInputid('jform_input_dir');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');
	
		// Act
		$url = $model->getUrl();
	
		//Assert
		$this->assertThat($url, $this->equalTo('/'));
	}	
	/**
	 * @test
	 */
	public function suppliesUsableFolderList(){
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder(realpath(JPATH_ROOT.'/ftp'));
		$model->setInputid('jform_input_dir');
		$model->setUrlinputid('jform_input_url');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');

		$path = realpath(JPATH_ROOT.'/ftp');
		$folders = explode('/',$path);

		//Act
		$list = $model->getFolderList();

		//Assert

		$this->assertThat ( count($list), $this->equalTo(count($folders)));

		$tpath = '';
		for($i=0;$i<count($list)-1;$i++) {
			$tpath .= $i==1?$folders[$i]:'/'.$folders[$i];
			$this->assertThat($list['item'.($i+1)], $this->equalTo(($i==0?'/':$folders[$i])));
			$this->assertThat($model->getSelectFolderUrl('item'.($i+1)) ,
                $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].
                    '/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder=' . urlencode($tpath)));
		}


	}

	/**
	 * @test
	 */
	public function switches_to_root_folder_if_supplied_folder_does_not_exist(){
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder('input');
		$model->setInputid('jform_input_dir');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');

		$this->assertThat($model->getFolder(), $this->equalTo(realpath(JPATH_ROOT)));
	}
	/**
	 * @test
	 */
	public function suppliesUsableSubFolderList(){
	
		//Arrange
		$model = new ReaXmlImportModelsFolderbrowser();
		$model->setFolder(realpath(JPATH_ROOT.'/ftp'));
		$model->setInputid('jform_input_dir');
		$model->setUrlinputid('jform_input_url');
		$model->setCurrenturi('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php');

        $path = realpath(JPATH_ROOT.'/ftp');
        $folders = explode('/',$path);

        //Act
		$list = $model->getSubFolderList();
		
		//Assert
		$this->assertThat(count($list), $this->equalTo(5));
        $root = urlencode(realpath(JPATH_ROOT));
		$this->assertThat($list['item1'], $this->equalTo('done'));
		$this->assertThat($model->getSelectSubFolderUrl('item1') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp%2Fdone'));
		$this->assertThat($list['item2'], $this->equalTo('error'));
		$this->assertThat($model->getSelectSubFolderUrl('item2') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp%2Ferror'));
		$this->assertThat($list['item3'], $this->equalTo('input'));
		$this->assertThat($model->getSelectSubFolderUrl('item3') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp%2Finput'));
		$this->assertThat($list['item4'], $this->equalTo('log'));
		$this->assertThat($model->getSelectSubFolderUrl('item4') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp%2Flog'));
		$this->assertThat($list['item5'], $this->equalTo('work'));
		$this->assertThat($model->getSelectSubFolderUrl('item5') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp%2Fwork'));
		
		$this->assertThat($model->getSelectSubFolderUrl('itemX') , $this->equalTo('http://'.$GLOBALS ['SERVER_NAME'].'/administrator/index.php?option=com_reaxmlimport&controller=config&view=folderbrowser&tmpl=component&inputid=jform_input_dir&urlinputid=jform_input_url&folder='.$root.'%2Fftp'));
		
	
	}
}

?>